{
  // 继承 Vue 的 DOM 环境基础配置
  "extends": "@vue/tsconfig/tsconfig.dom.json",
  "compilerOptions": {
    // TypeScript 构建信息文件的位置，用于增量编译
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.app.tsbuildinfo",
    // 基础路径，用于解析非相对模块名
    "baseUrl": "./",
    // 路径映射，用于简化导入路径
    "paths": {
      "@/*": ["src/*"]
    },

    /* Linting - 代码质量检查相关配置 */
    // 启用所有严格的类型检查选项
    "strict": true,
    // 检查未使用的局部变量
    "noUnusedLocals": true,
    // 检查未使用的函数参数
    "noUnusedParameters": true,
    // 检查 switch 语句中的 case 是否都有 break 或 return
    "noFallthroughCasesInSwitch": true,
    // 检查导入的模块是否有副作用
    "noUncheckedSideEffectImports": true,

    /* 新增的优化配置 */
    // 启用实验性的装饰器支持
    "experimentalDecorators": true,
    // 启用装饰器的元数据反射
    "emitDecoratorMetadata": true,
    // 允许从没有设置默认导出的模块中默认导入       
    "allowSyntheticDefaultImports": true,
    // 启用 ES 模块互操作性
    "esModuleInterop": true,
    // 强制文件名大小写一致
    "forceConsistentCasingInFileNames": true,
    // 启用源映射
    "sourceMap": true,
    // 启用增量编译
    "incremental": true,
    // 启用 verbatim 模块语法
    "verbatimModuleSyntax": true,
    // 启用 JSX 支持
    "jsx": "preserve",
    // JSX 导入源
    "jsxImportSource": "vue",
    // 启用类字段定义
    "useDefineForClassFields": true,
    // 允许导入 JSON 文件
    "resolveJsonModule": true,
    // 启用声明文件生成
    "declaration": true,
    // 启用声明文件映射
    "declarationMap": true,
    // 忽略特定模块的类型检查
    "types": ["vite/client", "element-plus/global"]
  },
  // 包含的文件范围
  "include": [
    "src/**/*.ts",    // 所有 TypeScript 文件
    "src/**/*.tsx",   // 所有 TypeScript JSX 文件
    "src/**/*.vue",   // 所有 Vue 单文件组件
    "auto-imports.d.ts",  // 自动导入的类型声明文件
    "components.d.ts",    // 组件类型声明文件
    "env.d.ts",          // 环境变量类型声明文件
    "src/vite-env.d.ts",     // vite 环境变量类型声明文件
  ],
  // 排除的文件范围
  "exclude": [
    "node_modules",
    "dist",
    "**/*.test.ts",
    "**/*.spec.ts",
    "**/*.config.ts"
  ]
}
